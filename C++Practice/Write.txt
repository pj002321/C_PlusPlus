
2023-09-05 17:42:03.6099886
//-----------------------------------------------------------------------------
// 2023 2학기 C++		9월4일			(1주 1일)
//-----------------------------------------------------------------------------
// 강의 소개
// [ 컴파일 환경 - Release 모드 / x64 ]
// [ 컴파일러 버전 17.7 이상 ]
// [ C++ 표준 - 최신 C++ 초안의 기능(/std:c++latest) ]
// 한학기 강의를 저장할 수 있는 SAVE 코드 작성
//-----------------------------------------------------------------------------
// [할일] 모두의 C++ / C++ 언어를 구글에서 검색해보기
//-----------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>		// 시간을 다룬다.

using namespace std;
int main()
{
	std::cout << "Hello" << '\n' << "World" << '\n';

	// - CPP 파일의 내용을 읽어서 하드 디스크에 기록하는 과정. - //

	// [1] CPP 파일을 읽는다. (Read)
	//		- CPP 파일을 연다.
	//		- 파일에서 한글자씩 읽어서 저장한다.
	// [2] 읽은 내용은 다른 파일에 쓴다. (Write)
	//		- 저장할 파일을 연다.
	//		- 읽은 글자를 저장할 파일에 기록한다.

	//[1] - <fstream> : 파일을 읽고 쓸 때 포함
	// * ifstream
	std::ifstream in{ "소스.cpp" };
	//[2] 
	// * ofstream
	std::ofstream out{ "Write.txt" ,std::ios::app };
	//+ 저장할 현재시간을 기록
	auto now = std::chrono::system_clock::now();
	out << '\n' << now + 9h << '\n';

	char c;

	in >> std::noskipws; // 공백을 skip 하지않는다.

	while (in >> c) { // 읽어올 글자가 있을 때 까지 
		out << c;
	}



}

2023-09-05 17:42:06.5658864
//-----------------------------------------------------------------------------
// 2023 2학기 C++		9월4일			(1주 1일)
//-----------------------------------------------------------------------------
// 강의 소개
// [ 컴파일 환경 - Release 모드 / x64 ]
// [ 컴파일러 버전 17.7 이상 ]
// [ C++ 표준 - 최신 C++ 초안의 기능(/std:c++latest) ]
// 한학기 강의를 저장할 수 있는 SAVE 코드 작성
//-----------------------------------------------------------------------------
// [할일] 모두의 C++ / C++ 언어를 구글에서 검색해보기
//-----------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>		// 시간을 다룬다.

using namespace std;
int main()
{
	std::cout << "Hello" << '\n' << "World" << '\n';

	// - CPP 파일의 내용을 읽어서 하드 디스크에 기록하는 과정. - //

	// [1] CPP 파일을 읽는다. (Read)
	//		- CPP 파일을 연다.
	//		- 파일에서 한글자씩 읽어서 저장한다.
	// [2] 읽은 내용은 다른 파일에 쓴다. (Write)
	//		- 저장할 파일을 연다.
	//		- 읽은 글자를 저장할 파일에 기록한다.

	//[1] - <fstream> : 파일을 읽고 쓸 때 포함
	// * ifstream
	std::ifstream in{ "소스.cpp" };
	//[2] 
	// * ofstream
	std::ofstream out{ "Write.txt" ,std::ios::app };
	//+ 저장할 현재시간을 기록
	auto now = std::chrono::system_clock::now();
	out << '\n' << now + 9h << '\n';

	char c;

	in >> std::noskipws; // 공백을 skip 하지않는다.

	while (in >> c) { // 읽어올 글자가 있을 때 까지 
		out << c;
	}



}
